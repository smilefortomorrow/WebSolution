// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace WorkFlowSystem.Entities;

[Table("Package")]
public partial class Package
{
    [Key]
    public int PackageID { get; set; }

    public int ClientID { get; set; }

    [Required]
    [StringLength(255)]
    [Unicode(false)]
    public string PackageNumber { get; set; }

    [Required]
    [StringLength(50)]
    [Unicode(false)]
    public string TypeOfRequest { get; set; }

    [Column(TypeName = "date")]
    public DateTime DateSubmitted { get; set; }

    [Column(TypeName = "date")]
    public DateTime? EndDate { get; set; }

    [Column(TypeName = "date")]
    public DateTime Deadline { get; set; }

    [StringLength(255)]
    [Unicode(false)]
    public string Status { get; set; }

    public string Information { get; set; }

    [StringLength(260)]
    [Unicode(false)]
    [Column("FileNames")]
    public string FileNames { get; set; }

    [StringLength(512)]
    [Unicode(false)]
    [Column("Urls")]
    public string Urls { get; set; }

    [StringLength(255)]
    [Unicode(false)]
    public string FollowUpPackageNumber { get; set; }

    [Column("DateRemoved", TypeName = "date")]
    public DateTime? DateRemoved { get; set; }

    [StringLength(10)]
    [Unicode(false)]
    [Column("ApproveState")]
    public string ApproveState { get; set; }

    [StringLength(100)]
    [Unicode(false)]
    [Column("Reason")]
    public string Reason { get; set; }

    [Column("Rate")]
    public double? Rate { get; set; }

    [Column("Spend")]
    public int? Spend { get; set; }

    [Column("Summery")]
    [StringLength(512)]
    [Unicode(false)]
    public string Summery { get; set; }

    [Column("InvoiceID")]
    public int? InvoiceID { get; set; }

    public int? Priority { get; set; }

    [ForeignKey("ClientID")]
    [InverseProperty("Packages")]
    public virtual Client Client { get; set; }

    [InverseProperty("Package")]
    public virtual ICollection<DrawingRequest> DrawingRequests { get; set; } = new List<DrawingRequest>();

    public static List<string> Convert(string value)
    {
        List<string> result = new List<string>();

        if (value == null || value ==  string.Empty) { return null; }
        string[] l = value.Split("|");

        for (int i = 0; i < l.Length; i++) {
            result.Add(l[i]);
        }
        return result;
    }
    public static string Convert(List<string> l)
    {
        string ret = "";
        foreach (string s in l)
        {
            if (ret == "")
            {
                ret = s;
            }
            else
            {
                ret += "|" + s;
            }
        }
        return ret;
    }
}